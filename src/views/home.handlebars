<div>
    <nav class="navbar navbar-expand-lg navbar-light bg-light"> 
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Lucy-Love</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Inicio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/products">Productos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Ofertas</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Contacto</a>
                    </li>
                </ul>
                <div class="d-flex me-2 w-25">
                    {{#if user}}
                        <div class="pt-2 w-75">
                            <span class="nav-link d-inline">
                                <i class="bi bi-person-circle"></i> Bienvenido: {{user.first_name}}!
                            </span>
                            <form action="/api/sessions/logout" method="POST" class="d-inline" id="logoutForm">
                                <button type="button" class="btn btn-link nav-link" onclick="confirmLogout()">Cerrar Sesión</button>
                            </form>
                        </div>
                        <a href="/carts/{{user.cart}}" class="btn btn-outline-primary">
                            <i class="bi bi-cart">
                                <span id="cartItemCount" class="badge bg-secondary">{{user.cartItemCount}}</span>
                            </i>
                        </a>
                    {{else}}
                        <div class="pt-2">
                            <span class="nav-link d-inline"></span>
                            <a href="/login" class="nav-link d-inline">Iniciar Sesión</a>
                            <span>/</span>
                            <a href="/register" class="nav-link d-inline">Registrarse</a>
                        </div>
                    {{/if}}
                </div>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row">
            {{#each productos}}
            <div class="col-lg-3 col-md-4 col-sm-6 mb-3">
                <div class="card h-100 p-1">
                    <img src="{{img}}" class="card-img-top custom-size" alt="{{title}}">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-center">{{title}}</h5>
                        <p class="text-center">{{category}}</p>
                        <h6 class="text-center">$ {{price}}</h6>
                    </div>
                    <div class="text-center mb-2">
                        <button class="btn btn-primary btn-sm add-to-cart" data-product-id="{{_id}}">
                            Agregar al Carrito
                        </button>
                        <button class="btn btn-secondary btn-sm" onclick="showProductDetails('{{title}}', '{{category}}', '{{price}}')">
                            Ver Detalles
                        </button>
                    </div>
                </div>
            </div>
            {{/each}}
        </div>

        </nav>
    </div>

    <!-- Script para manejo de carrito y otras funcionalidades -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            {{#if user}}
                Swal.fire({
                    title: '¡Bienvenido!',
                    text: 'Bienvenido: {{user.first_name}}!',
                    icon: 'success',
                    confirmButtonText: 'Aceptar'
                });
            {{/if}}

            // Manejar clics en los botones "Agregar al Carrito"
            const addToCartButtons = document.querySelectorAll('.add-to-cart');
            addToCartButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const productId = this.getAttribute('data-product-id');
                    addToCart(productId);
                });
            });
        });

        function confirmLogout() {
            Swal.fire({
                title: '¿Estás seguro?',
                text: "¿Deseas cerrar sesión?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, cerrar sesión!',
                cancelButtonText: 'No, cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('logoutForm').submit();
                }
            });
        }

        function showProductDetails(title, category, price) {
            Swal.fire({
                title: title,
                text: `Categoría: ${category}\nPrecio: $${price}`,
                icon: 'info',
                confirmButtonText: 'Cerrar'
            });
        }

        function addToCart(productId) {
            // Verificar si el usuario está logueado
            const isLoggedIn = {{#if user}}true{{else}}false{{/if}};
            if (!isLoggedIn) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No has iniciado sesión',
                    text: 'Por favor, inicia sesión para agregar productos al carrito.',
                    confirmButtonText: 'Aceptar'
                });
                return;
            }

            // Obtener el ID del carrito del usuario
            const cartId = "{{user.cart}}";

            // Enviar la solicitud AJAX al servidor para agregar el producto al carrito
            fetch(`/api/carts/${cartId}/product/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    // Incluir el token JWT si es necesario para autenticación
                    'Authorization': `Bearer ${getCookie('BeautyCookieToken')}`
                },
                body: JSON.stringify({
                    quantity: 1  // Puedes modificar esto para permitir al usuario seleccionar la cantidad
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    Swal.fire({
                        title: 'Error',
                        text: data.error,
                        icon: 'error',
                        confirmButtonText: 'Ok'
                    });
                } else {
                    Swal.fire({
                        title: 'Producto agregado',
                        text: 'El producto ha sido agregado a tu carrito.',
                        icon: 'success',
                        confirmButtonText: 'Ok'
                    });
                    updateCartItemCount(data.totalItems);
                }
            })
            .catch(error => {
                console.error('Error al agregar el producto:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'Hubo un problema al agregar el producto al carrito.',
                    icon: 'error',
                    confirmButtonText: 'Ok'
                });
            });
        }

        function updateCartItemCount(count) {
            const cartBadge = document.getElementById('cartItemCount');
            if (cartBadge) {
                cartBadge.textContent = count;
            }
        }

        // Función para obtener cookies (para obtener el token JWT)
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }
    </script>
</div>